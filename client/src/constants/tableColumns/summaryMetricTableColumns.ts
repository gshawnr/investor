import { IColumn } from "../../types/tableTypes";

export const summaryColumns: IColumn[] = [
  { field: "ticker", label: "Ticker" },
  { field: "ticker_year", label: "Ticker_Year" },
  { field: "fiscalYear", label: "Year" },
  { field: "industry", label: "Industry" },
  { field: "beta", label: "Beta" },
  { field: "currency", label: "Currency" },
  { field: "assets", label: "Assets" },
  { field: "currentAssets", label: "Current Assets" },
  { field: "liabilities", label: "Liabilities" },
  { field: "currentLiabilities", label: "Current Liabilities" },
  { field: "longTermDebt", label: "LTD" },
  { field: "totalDebt", label: "Total Debt" },
  { field: "depreciationAndAmortization", label: "Depr & Amort" },
  { field: "capEx", label: "CapEx" },
  { field: "ebitda", label: "EBITDA" },
  { field: "equity", label: "Equity" },
  { field: "revenue", label: "Revenue" },
  { field: "grossProfit", label: "Gross Profit" },
  { field: "operatingIncome", label: "Operating Income" },
  { field: "netIncome", label: "Net Income" },
  { field: "eps", label: "EPS" },
  { field: "epsDiluted", label: "EPS Diluted" },
];

export const metricColumns: IColumn[] = [
  { field: "ticker", label: "Ticker" },
  { field: "ticker_year", label: "Ticker_Year" },
  { field: "fiscalYear", label: "Year" },
  { field: "industry", label: "Industry" },
  { field: "sector", label: "Sector" },
  { field: "performanceData.returnOnEquity", label: "ROE" },
  { field: "performanceData.salesToEquity", label: "Sales / Equity" },
  { field: "profitabilityData.grossMargin", label: "Gross Margin" },
  { field: "profitabilityData.netMargin", label: "Net Margin" },
  { field: "stabilityData.debtToEquity", label: "DTE" },
  { field: "stabilityData.debtToEbitda", label: "Debt / EBITDA" },
  { field: "stabilityData.currentRatio", label: "CR" },
  { field: "avgStockPrice", label: "Avg Price" },
  { field: "valueData.dcfValuePerShare", label: "DCF" },
  { field: "valueData.dcfToAvgPrice", label: "DCF / Avg Price" },
  { field: "valueData.priceToEarnings", label: "Price / Earnings" },
  { field: "valueData.earningsYield", label: "Earnings Yield" },
  { field: "valueData.priceToSales", label: "Price / Sales" },
];
